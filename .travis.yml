sudo: required
dist: focal
language: c
addons:
  apt:
    # This has the same effect as running apt-get update, but avoid problems
    # with signature verification
    update: true
  postgresql: '12'
  mysql: '8'
  apt:
    packages:
      - postgresql-12
      - mysql-client-8.0
before_install:
  - git diff-index --quiet HEAD --
  # BEGIN postgresql trust based authentication
  - sudo sed -i -e '/local.*peer/s/postgres/all/' -e 's/peer\|md5/trust/g' /etc/postgresql/*/main/pg_hba.conf
  - sudo systemctl restart postgresql
  # END
  - sudo -u postgres createuser -p 5433 -s links
  - sudo apt-get install -y ocaml-nox ocaml-native-compilers opam python3-setuptools python3-pip libev-dev
  - pip3 install -U Sphinx
  - opam init --disable-sandboxing -n
  - opam switch create ocaml-base-compiler.4.08.0
  - eval `opam config env`
  - opam install -y conf-libev conf-mysql
  #   # BEGIN Hack to install links-mysql
  # - sudo apt install -y libmysqlclient-dev
  # - opam install -y conf-mysql
  # - sudo apt install -y libmariadb-dev
  #   # END
  - opam install -y postgresql mysql8 ounit2
  - opam install -y ocamlformat.0.14.2
  - make rule-check
  - psql -c 'create database links;' -U links -p 5433
  - mysql -e 'CREATE DATABASE links;'
  - mysql -e "CREATE USER links IDENTIFIED BY 'links';"
  - mysql -e 'GRANT ALL ON  links.* TO links;'
script:
  - opam pin add links . -y
  - opam pin add links-postgresql . -y
  - opam pin add links-sqlite3 . -y
  - opam pin add links-mysql . -y
  - make doc
  - make all-ci
  - make tests
  - ./run-database-tests tests/database -d all
  - ./run-database-tests tests/shredding -d all
  - ./run-database-tests tests/relational-lenses -d all
  - ./run-tests unit
