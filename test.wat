(module
  (type $0 (func)) ;; main
  (type $1 (struct (field i32) (field (ref null eq)))) ;; variant
  (type $2 (struct (field (ref null eq)) (field (ref null 2)))) ;; list
  (type $3 (array (mut i8))) ;; string
  (type $4 (struct (field i64))) ;; boxed int
  (type $5 (struct (field f64))) ;; boxed float
  (type $6 (func (param (ref null eq) (ref null struct)) (result (ref null eq)))) ;; f
  (type $7 (struct (field (ref 6)) (field (ref null struct)))) ;; closed f
  (type $8 (func (param i64 (ref null struct)) (result i64))) ;; f specialized on int
  (type $9 (struct (field (ref 8)) (field (ref null struct)))) ;; closed f
  (type $10 (func (param (ref 3) (ref null struct)) (result (ref 3)))) ;; f spe on str
  (type $11 (struct (field (ref 10)) (field (ref null struct))))
  (type $12 (func (param (ref null eq)) (result (ref null eq))))
  (global (export "a") (mut i64) (i64.const 0))
  (global (export "_init_result") (mut (ref 3)) (array.new_fixed 3 0))
  (func $0 (type 6) (local (ref null eq))
    (local.get 0)
    (local.set 2)
    (local.get 2)
  )
  (func $1 (export "main") (type 0) (local (ref 9) (ref 11))
    (i64.const 1)
    (ref.func 2)
    (ref.func 0)
    (ref.null none)
    (struct.new 7)
    (struct.new 9)
    (local.tee 0)
    (struct.get 9 1)
    (local.get 0)
    (struct.get 9 0)
    (call_ref 8)
    (global.set 0)
    (i32.const 72)
    (i32.const 101)
    (i32.const 121)
    (array.new_fixed 3 3)
    (ref.func 3)
    (ref.func 0)
    (ref.null none)
    (struct.new 7)
    (struct.new 11)
    (local.tee 1)
    (struct.get 11 1)
    (local.get 1)
    (struct.get 11 0)
    (call_ref 10)
    (global.set 1)
  )
  (func $2 (type 8) (local (ref 7))
    (local.get 1)
    (ref.cast (ref 7))
    (local.set 2)
    (local.get 0)
    (struct.new 4)
    (local.get 2)
    (struct.get 7 1)
    (local.get 2)
    (struct.get 7 0)
    (call_ref 6)
    (ref.cast (ref 4))
    (struct.get 4 0)
  )
  (func $3 (type 10) (local (ref 7))
    (local.get 1)
    (ref.cast (ref 7))
    (local.set 2)
    (local.get 0)
    (local.get 2)
    (struct.get 7 1)
    (local.get 2)
    (struct.get 7 0)
    (call_ref 6)
    (ref.cast (ref 3))
  )
  (func $4 (export "f") (type 12) (local.get 0) (ref.null none) (return_call 0))
  (start 1)
  (elem $0 declare func 0 2 3)
)
