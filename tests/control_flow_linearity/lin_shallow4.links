# Use the linear variable `ch` in a shallow handler with an auxiliary
# recursive function

var ch = fork(fun(ch) {
    xlin;
    var ch = send(42, ch);
    close(ch)
});

sig h : (() {Foo:() =@ Int|a::Lin}~@ b) { |_::Lin}-> () {Foo{_::Lin}|a::Lin}~@ b
fun h(m) {
  xlin;
  linfun() {
    shallowhandle({xlin; m()}) {
      case <Foo =@ k> -> {
        xlin;
        h(linfun(){xlin; k(0)})()
      }
    }
  }
}

shallowhandle({
  lindo Foo() + 42
}) {
  case <Foo =@ k> -> {
    xlin;
    var (i, ch) = receive(ch);
    close(ch);
    h(linfun(){xlin; k(i)})()
  }
}