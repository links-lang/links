# issue 544
# https://github.com/links-lang/links/issues/544


# Breaking type safety.
# Inadvertently send two integers over a session-typed channel
# !Int.!String.end by using multi-shot continuations and exceptions.

# A correct linear version
fun unsound_correct() {
  var ch = fork(fun(ch) {
    var (i, ch) = receive(ch);
    var (s, ch) = receive(ch);
    println("Int: " ^^ intToString(i));
    println("String: " ^^ s);
    close(ch)
  });

  handle({
    # Nondeterministic choice.
    var msg = if (ldo LFlip) 42 else 84;
    var ch = send(msg, ch);
    # Throws an exception
    ignore(ldo LFail);
    var ch = send("foo", ch);
    close(ch)
  }) {
    case Return(_) -> ()
    case LFail(_) -> ()
    case LFlip(resume) -> resume(true)
  }
}

fun unsound() {
  var ch = fork(fun(ch) {
    var (i, ch) = receive(ch);
    var (s, ch) = receive(ch);
    println("Int: " ^^ intToString(i));
    println("String: " ^^ s);
    close(ch)
  });

  handle({
    # Nondeterministic choice.
    var msg = if (do Flip) 42 else 84;
    var ch = send(msg, ch);
    # Throws an exception
    ignore(do Fail);
    var ch = send("foo", ch);
    close(ch)
  }) {
    case Return(_) -> ()
    case Fail(_) -> ()
    case Flip(resume) ->
      resume(true); resume(false)
  }
}