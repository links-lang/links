#!/usr/bin/env bash
#
# Runs a series of scripts that each check whether some code invariant
# is respected.
#

RULEDIR="tools/rules"
BLACKLIST=("")

function is_blacklisted () {
    local target="$1"
    local script=
    for script in ${BLACKLIST[@]}; do
        echo "$script == $target\n" >> debug
        if [[ "$script" == "$target" ]]; then
            return 1
        fi
    done
    return 0
}

ERRORS=0

for script in $(find $RULEDIR -maxdepth 1 -type f -not -name "*~"); do
    # Only run the script if it is under revision control.
    git ls-files --error-unmatch "$script" > /dev/null 2>&1 # Returns 1 when the file is untracked.
    if [[ $? -eq 0 ]]; then
        # Check whether the script is blacklisted.
        is_blacklisted $(basename "$script")
        if [[ $? -eq 1 ]]; then
            echo "Skipping '$script' as it is blacklisted..."
            continue
	elif [[ ! -x "$script" ]]; then
	    echo "Error: Found non-executable file $script in rules directory $RULEDIR"
	    ERRORS=$(($ERRORS+1))
        else
            echo "Running '$script'..."
            "./$script" | sed 's/^/  - /' ; test ${PIPESTATUS[0]} -eq 0
            ret_code=$?
            if [[ $ret_code -ne 0 ]]; then
                ERRORS=$(($ERRORS+$ret_code))
            fi
        fi
    else
        echo "Skipping '$script' as it is not under revision control..."
    fi
done

exit $ERRORS
