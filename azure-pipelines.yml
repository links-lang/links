# Azure Pipelines configuration.

trigger:
- master

pr:
  autoCancel: true
  branches:
    include:
      - '*'  # must quote since "*" is a YAML reserved character.

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
    mac:
      imageName: 'macos-latest'

pool:
  vmImage: $(imageName)


jobs:
  - job: dump_environment
    steps:
      - script: |
          printenv
    displayName: Environment

  - job: rule_check
    steps:
      - script: |
          make rule-check
    displayName: 'Rule check'

  - job: initialise_managers
    steps:
      - bash: |
          case $AGENT_OS in
            "Linux") sudo apt-get update ;;
            "Darwin") brew update ;;
            *) exit 1 ;;
          esac
    displayName: Initialise system package managers

  - job: ocaml_system_compiler
    dependsOn: initialise_managers
    steps:
      - bash: |
          case $AGENT_OS in
            "Linux") sudo apt-get install ocaml ;;
            "Darwin") brew install ocaml ;;
            *) exit 1 ;;
          esac
    displayName: 'OCaml system compiler'

  - job: opam2
    dependsOn: ocaml_system_compiler
    steps:
      - bash: |
          case $AGENT_OS in
            "Linux")  ./install_local_opam2.sh ;;
            "Darwin") brew install opam pkg-config &&
                      opam init --disable-sandboxing -n &&
                      echo "opam \$@" > opam2_local &&
                      chmod a+x opam2_local ;;
            *) exit 1 ;;
          esac
    displayName: 'OPAM 2'

  - job: ocaml_compiler
    dependsOn: opam2
    steps:
      - script: |
          ./opam2_local switch create ocaml-base-compiler.4.06.1
          eval `./opam2_local config env`
    displayName: 'OCaml compiler'

  - job: databases
    dependsOn: ocaml_system
    steps:
      - bash: |
          case $AGENT_OS in
            "Linux") sudo apt-get install postgresql libpq-dev sqlite3 libsqlite3-dev &&
                     sudo LINKS_CI=1 tools/configure-postgresql &&
                     sudo systemctl reload postgresql &&
                     sudo -u postgres createuser -s $(whoami) &&
                     sudo -u postgres createdb -O $(whoami) links ;;
            "Darwin") brew update &&
                      brew install postgres libpq sqlite3 &&
                      brew services start postgres &&
                      sleep 3 &&
                      /usr/local/opt/postgres/bin/createdb -O $(whoami) links ;;
            *) exit 1 ;;
          esac
    displayName: 'Databases'

  - job: links_dependencies
    dependsOn: ocaml_compiler
    steps:
      - script: |
          eval `./opam2_local env`
          ./opam2_local pin add links . -y
          ./opam2_local pin add links-postgresql . -y
          ./opam2_local pin add links-sqlite3 . -y
    displayName: 'Links dependencies'

  - job: links
    dependsOn:
      - links_dependencies
      - databases
    steps:
      - script: |
          eval `./opam2_local env`
          make all-release
    displayName: 'Build Links (release)'

  - job: server_tests
    dependsOn: links
    steps:
      - script: |
          eval `./opam2_local env`
          make tests
    displayName: 'Server-side tests'

  - job: shredding_tests
    dependsOn: links
    steps:
      - script: |
          eval `./opam2_local env`
          ./run-tests db-only shredding
    displayName: 'Database shredding tests'

  - job: relational_lenses_test
    dependsOn: links
    steps:
      - script: |
          eval `./opam2_local env`
          ./run-tests db-only relational-lenses
    displayName: 'Relational lenses tests'

  - job: unit_tests
    dependsOn: links
    steps:
      - script: |
          eval `./opam2_local env`
          ./opam2_local install -y oUnit
          ./run-tests unit
    displayName: 'Unit tests'
