# Azure Pipelines configuration.

trigger:
- master

pr:
  autoCancel: true
  branches:
    include:
      - '*'  # must quote since "*" is a YAML reserved character.

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
    mac:
      imageName: 'macos-latest'

pool:
  vmImage: $(imageName)

steps:
- script: |
    make rule-check
  displayName: 'Rule check'
- script: |
     sudo apt install ocaml
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: 'OCaml system compiler'
- bash: |
     brew update &&
     brew install ocaml &&
     brew install opam &&
     opam init --disable-sandboxing -n &&
     echo "opam \$@" > opam2_local
  condition: eq( variables['Agent.OS'], 'Darwin' )
  displayName: 'OCaml environment'
- script: |
    /usr/bin/env bash ./install_local_opam2.sh
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: 'OPAM 2'
- script: |
    /usr/bin/env bash ./opam2_local switch create ocaml-base-compiler.4.06.1
    eval `./opam2_local config env`
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: 'OCaml compiler'
- script: |
    sudo apt install postgresql libpq-dev sqlite3 libsqlite3-dev
    sudo LINKS_CI=1 tools/configure-postgresql
    sudo systemctl reload postgresql
    sudo -u postgres createuser -s $(whoami)
    sudo -u postgres createdb -O $(whoami) links
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: 'Databases'
- bash: |
    brew update &&
    brew install postgres libpq sqlite3 &&
    sudo LINKS_CI=1 tools/configure-postgresql &&
    brew services start postgres &&
    sleep 3 &&
    /usr/local/opt/postgres/bin/createuser -s $(whoami) &&
    /usr/local/opt/postgres/bin/createdb -O $(whoami) links
  condition: eq( variables['Agent.OS'], 'Darwin' )
  displayName: 'Databases'
- script: |
    eval `./opam2_local env`
    /usr/bin/env bash ./opam2_local pin add links . -y
    /usr/bin/env bash ./opam2_local pin add links-postgresql . -y
    /usr/bin/env bash ./opam2_local pin add links-sqlite3 . -y
  displayName: 'Links dependencies'
- script: |
    eval `./opam2_local env`
    make all-release
  displayName: 'Build Links (release)'
- script: |
    eval `./opam2_local env`
    make tests
  displayName: 'Server-side tests'
- script: |
    eval `./opam2_local env`
    /usr/bin/env bash ./run-tests db-only shredding
  displayName: 'Database shredding tests'
- script: |
    eval `./opam2_local env`
    /usr/bin/env bash ./run-tests db-only relational-lenses
  displayName: 'Relational lenses tests'
- script: |
    eval `./opam2_local env`
    /usr/bin/env bash ./opam2_local install -y oUnit
    /usr/bin/env bash ./run-tests unit
  displayName: 'Unit tests'
