typename Calc = mu a.[&|Add:?Int.?Int.!Int.a, Mul:?Int.?Int.!Int.a, Stop:EndBang|&];

sig calc : (Calc) ~> EndBang
fun calc(s) {
  offer (s) {
    case Add(s) ->
      var (x,s) = receive(s);
      var (y,s) = receive(s);
      var s = send(x+y,s);
      calc(s)
    case Mul(s) ->
      var (x,s) = receive(s);
      var (y,s) = receive(s);
      var s = send(x*y,s);
      calc(s)
    case Stop(s) ->
      s
  }
}

sig user : (~Calc) ~> Int
fun user(s) {
  var s = select Mul s;
  var (v, s) = receive(send(6,send(7,s)));
  var s = select Add s;
  var (v, s) = receive(send(v,send(v,s)));
  var s = select Stop s;
  wait(s);
  v
}

user(forkSync(calc))
