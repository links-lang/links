# Choice example.
# links> enumerate(choice);

# The choice computation
fun choice() {
  var x = if (do Choose()) { 2 }
          else { 4 };
  var y = if (do Choose()) { 8 }
          else { 16 };
  x + y
}

#
# A few (closed) handlers
#

# The "positive" handler
sig positive : (Comp(a, {Choose:Bool |e})) -> Comp(a, {Choose{_} |e})
fun positive(m)() {
  handle(m()) {
    case <Choose => k> -> k(true)
    case x   -> x
  }
}

# The "I'll-take-everything" handler
sig enumerate : (Comp(a, {Choose:Bool |e})) -> Comp([a], {Choose{_} |e})
fun enumerate(m)() {
  handle(m()) {
    case <Choose => k> -> k(true) ++ k(false)
    case x -> [x]
  }
}
